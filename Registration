Learn Login Page 
TECHNOLOGY USED : MONGODB , NODE , EXPRESS

pre-require : install npm , node, express and mongodb

    npm install hbs
    make following


define routes.js
    // module.exports = (app) => {
        // 	const App = require("../controllers/app.controller");
          
        // 	app.post("/create", App.create);
          
        // 	app.get("/get-all", App.findAll);
          
        // 	app.get("/message/:messageId", App.findOne);
          
        // 	app.put("/message/:messageId", App.update);
          
        // 	app.delete("/message/:messageId", App.delete);<br>
        //   };
        
        
        
        
        
         var app = require("express").Router();
         var path=require('path');
        
         var mongoose = require ( 'mongoose' );
         var db = require ( '../config/db' );
        
        console.log ( "connecting--" , db );
        mongoose.connect ( db.url ); //Mongoose connection created
        const express = require ( 'express' );
        
        const Student=require('../app/models/student');
        const appp = express ();
        const bodyParser = require('body-parser');
        appp.use(bodyParser.urlencoded({ extended: true }));
        
        appp.use(bodyParser.json());
        appp.use(express.json());
        appp.use(express.urlencoded({extended:false}))
        
        
        app . get ( '/' , ( req , res ) => //res . send ( 'Welcome to Tutorialspoint!' )<br>
        res.sendFile(path.join(__dirname, '../view/login.html')));<br>
        
        app . get ( '/register' , ( req , res ) => //res . send ( 'Welcome to Tutorialspoint!' )<br>
        res.sendFile(path.join(__dirname, '../view/register.html')));
        
        <br>
        app . get ( '/tproute' , ( req , res  ) =>{
             res . send ( 'This is routing for the application developed using Node and Express...' )
             //res.sendFile(path.join(__dirname, './login.html'));
        });
        
        
        // app.get('/welcome',(req,res)=>{
        // 	var data=Student.find ( function ( err , Student ) {
        // 		// if there is an error retrieving, send the error.
        // 		// nothing after res.send(err) will execute
        // 		if ( err )
        // 		res . send ( err );
        // 		res . json ( Student ); // return all students in JSON format
        // 		});
        // });
        
        //show database collection
        async function getItems(){
        
            const Items = await Student.find({});
            return Items;
          
          }
      
          app.get("/welcome", function (req, res) {
          
            getItems().then(function(FoundItems){
              
              res.send(FoundItems);
          
            });
          
          });
        
   
        
        app.get('/api/students', async (req, res) => {
                const allUsers = await Student.find()
                res.status(200).send({
                
                  //status: 'Success',
                  //data: allUsers,
                });
                res.json ( allUsers );
        });
     
        app.get('/delete',function(req,res){
            if(res.status==200)
            {
                res.send("deltelted");
            }
            else
            {
                res.send("delted");
                //res.sendFile(path.join(__dirname, '../AnyError.html'));
            }
        });
    
        app.get('/update',function(req,res){
            if(res.status==200)
            {
                res.send("updated");
            }
            else
            {
                res.send("updated");
                res.sendFile(path.join(__dirname, '../AnyError.html'));
            }
        });
     
        app.get('/add',function(req,res){
            res.send("added");
            res.sendFile(path.join(__dirname, '../view/login.html'));
        
        });
     
        app.post('/login',async(req,res)=>{
            const data={
                name:req.body.name,
                email:req.body.email,
                phone:req.body.phone,
                place:req.body.place,
            }
            await Student.insertMany([data]);
            res.sendFile(path.join(__dirname,'../view/index.html'));
        });
        
     
        
        module.exports = app;

